<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}

class {{ class }} extends Controller
{
    private const DIRECT = 'dashboard-theme.{{ modelVariable }}s.';
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        ${{ modelVariable }}s = {{ model }}::paginate(config('paginate.paginate_number'));
        return view(self::DIRECT . 'index', get_defined_vars());
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        return view(self::DIRECT . 'create');
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{ storeRequest }} $request)
    {
        {{ model }}::create($request->validated());
        return back()->with('success', __('messages.add-status'));
    }

    /**
     * Display the specified resource.
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        return view(self::DIRECT . 'show', get_defined_vars());
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{ model }} ${{ modelVariable }})
    {
        return view(self::DIRECT . 'edit', get_defined_vars());
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->update($request->validated());
        return to_route('dashboard.services.index')->with('success', __('messages.update-status'));
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();
        return back()->with('success', __('messages.delete-status'));
    }
}
